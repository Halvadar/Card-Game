{"version":3,"sources":["public/Konoha.svg","components/Card.js","components/Info.js","components/Login.js","public/Loading.svg","components/LoadingBar.js","components/Cards.js","functions.js","public/Arrow.svg","components/History.js","components/GameInfo.js","public/Menu.svg","components/BurgerNav.js","components/WindowInfo.js","App.js","index.js"],"names":["CardSide","styled","div","CardBack","props","flipped","CardFront","CardContainer","loadingProp","StyledImage","img","attrs","src","srcProp","alt","altProp","StyledFrontImage","Card","imageSrc","index","onCardClickFunction","setImageLoaded","loading","onClick","Konoha","onLoad","prevState","newState","InfoContainer","Person","SignOut","Info","currentUser","signOut","LoginContainerAnimation","keyframes","LoginContainer","GoogleFacebookAnimation","GoogleFacebook","Google","Facebook","SignIn","errorAnimation","Error","error","css","Login","facebookLogin","googleLogin","length","BarContainer","Progress","style","width","widthProp","LoadingBar","currentProgress","progressLength","CardsContainer","LoadingImg","object","data","type","Start","Cards","imageLoadingProgress","Loading","started","start","shouldContinue","children","cardImageInitializer","setCardImageUrls","setCardStates","storageImagesRef","allImagesRef","setDataInitialized","a","imageUrls","listAll","then","imagesArr","catch","err","images","items","image","getDownloadURL","url","push","current","randomImagesArrayMaker","cardStatesSetter","arr","newArr","selectedImagesArr","i","splice","Math","round","random","indexArray","Array","from","keys","cardsArray","urlIndex","format","time","secs","ret","timeDifference","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Date","now","HistoryContainer","showHistory","HistoryItem","DateDiv","NoGames","History","history","isMobile","reverse","map","item","tries","score","timeNeeded","createdAt","Score","Tries","TimeLeft","GameInfoContainer","InfoHistoryCont","InfoCont","HistoryCont","GameInfoDivs","Save","ArrowImg","GameFinished","GameInfo","save","timeLeft","gameFinished","useState","setShowHistory","finishedScores","setFinishedScores","useEffect","Arrow","BurgerNavContainer","menuActivated","Icon","InfoDiv","BurgerNav","setMenuActivated","Menu","WindowInfo","window","innerWidth","height","innerHeight","windowInfo","setWindowInfo","resizeFunc","addEventListener","removeEventListener","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","imagesRef","storage","ref","child","GlobalStyle","createGlobalStyle","MainContainer","GeneralError","App","loggedIn","setLoggedIn","setCurrentUser","currentUserId","setCurrentUserId","cardImageUrls","cardStates","setTries","guesses","setGuesses","setScore","didntGuessStreak","setDidntGuessStreak","currentFlippedCard","setCurrentFlippedCard","loginError","setLoginError","generalError","setGeneralError","animationInProgress","setAnimationInProgress","timeLeftState","setTimeLeftState","errorRef","useRef","scoreRef","guessesRef","triesRef","didntGuessStreakRef","timeLeftRef","timeLeftInterval","animationTimeOutRef","setStarted","setShouldContinue","setGameFinished","gameFinishedTimeoutRef","imageLoaded","setImageLoadingProgress","setLoading","loginLoading","setLoginLoading","dataInitialized","setHistory","saving","setSaving","provider","GoogleAuthProvider","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","result","onLoginFunction","user","message","FacebookAuthProvider","uid","displayName","collection","doc","get","cardsShouldBeInitialized","exists","errorFunction","onAuthStateChanged","clearTimeout","forEach","includes","onGameFinish","clearInterval","newHistory","getTime","set","setTimeout","card","setInterval","arrIndex","scoreCalculator","saveData","errorMessage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce37eac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Konoha.8438ae9d.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Konoha from \"../public/Konoha.svg\";\r\n\r\nconst CardSide = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  transition: 0.5s transform ease;\r\n  backface-visibility: hidden;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\nconst CardBack = styled(CardSide)`\r\n  background: #84abf3;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transform: ${(props) => {\r\n    return props.flipped ? \"rotateY(180deg)\" : null;\r\n  }};\r\n`;\r\nconst CardFront = styled(CardSide)`\r\n  transform: rotateY(-180deg);\r\n  background: red;\r\n  transform: ${(props) => {\r\n    return props.flipped ? \"rotateY(0deg)\" : null;\r\n  }};\r\n`;\r\nconst CardContainer = styled.div`\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  max-height: 50vh;\r\n  position: relative;\r\n  cursor: pointer;\r\n  visibility: ${(props) => props.loadingProp && \"hidden\"};\r\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.19), 3px 3px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\nconst StyledImage = styled.img.attrs((props) => ({\r\n  src: props.srcProp,\r\n  alt: props.altProp,\r\n}))`\r\n  margin: auto;\r\n  display: block;\r\n  width: 30%;\r\n`;\r\nconst StyledFrontImage = styled.img.attrs((props) => ({\r\n  src: props.srcProp,\r\n  alt: props.altProp,\r\n}))`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  object-fit: cover;\r\n  object-position: 50% 20%;\r\n`;\r\n\r\nconst Card = ({\r\n  imageSrc,\r\n  flipped,\r\n  index,\r\n  onCardClickFunction,\r\n  setImageLoaded,\r\n  loading,\r\n}) => {\r\n  const onLoadFunction = () => {\r\n    setImageLoaded((prevState) => {\r\n      const newState = [...prevState];\r\n      newState[index] = true;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CardContainer\r\n      loadingProp={loading}\r\n      onClick={() => onCardClickFunction(index)}\r\n    >\r\n      <CardBack flipped={flipped}>\r\n        <StyledImage srcProp={Konoha} altProp={\"Konoha\"} />\r\n      </CardBack>\r\n      <CardFront flipped={flipped}>\r\n        <StyledFrontImage\r\n          onLoad={onLoadFunction}\r\n          srcProp={imageSrc}\r\n        ></StyledFrontImage>\r\n      </CardFront>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  grid-column: 1/-1;\r\n  padding: 10px;\r\n  align-items: center;\r\n  border: 1px solid #03d9ff;\r\n  border-radius: 3px;\r\n`;\r\nexport const Person = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  color: #575757;\r\n`;\r\nexport const SignOut = styled.div`\r\n  width: max-content;\r\n  background: #ff6464;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Info = ({ currentUser, signOut }) => {\r\n  return (\r\n    <InfoContainer>\r\n      <Person>{currentUser}</Person>\r\n      <SignOut onClick={() => signOut()}>Sign Out</SignOut>\r\n    </InfoContainer>\r\n  );\r\n};\r\nexport default Info;\r\n","import React from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst LoginContainerAnimation = keyframes`\r\n    from {\r\n        transform:translate(-50%,-30%);\r\n    }\r\n    to{\r\n        transform:translate(-50%,-50%);\r\n    }\r\n`;\r\nconst LoginContainer = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  height: 300px;\r\n  width: 300px;\r\n  min-width: 20vw;\r\n  min-height: 20vh;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n  animation: 0.5s ${LoginContainerAnimation} forwards ease-out;\r\n`;\r\nconst GoogleFacebookAnimation = keyframes`\r\n    from {transform:translateY(30%) scale(1); opacity:0.5;}\r\n    to {transform:translateY(0%) scale(1); opacity:1;}\r\n`;\r\nconst GoogleFacebook = styled.div`\r\n  height: 50px;\r\n  width: 250px;\r\n  min-width: 80%;\r\n  min-height: 20%;\r\n  max-width: 100%;\r\n  max-height: 45%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.2rem;\r\n  animation: 1s ${GoogleFacebookAnimation} ease-out;\r\n  cursor: pointer;\r\n  transition: 0.2s transform;\r\n  :active {\r\n    transform: scale(1.02);\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nconst Google = styled(GoogleFacebook)`\r\n  background: #f75858;\r\n\r\n  color: white;\r\n`;\r\nconst Facebook = styled(GoogleFacebook)`\r\n  background: #6eaffa;\r\n  color: white;\r\n`;\r\n\r\nconst SignIn = styled.div`\r\n  color: #69df69;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-bottom: 10%;\r\n  margin-top: 10%;\r\n`;\r\nconst errorAnimation = keyframes`\r\n    0% {opacity:0}\r\n    10%, 90% {opacity:1}\r\n    100% {opacity:0}\r\n`;\r\nconst Error = styled.div`\r\n  color: #f35555;\r\n  background: white;\r\n  font-weight: 600;\r\n  position: absolute;\r\n  left: 0px;\r\n  right: 0px;\r\n  top: 0;\r\n  text-align: center;\r\n  z-index: 10;\r\n  animation: ${(props) =>\r\n    props.error ? css`5s ${errorAnimation} forwards ease-in-out` : null};\r\n`;\r\nconst Login = ({ facebookLogin, googleLogin, error }) => {\r\n  return (\r\n    <LoginContainer>\r\n      <Error error={error.length > 0}>{error}</Error>\r\n      <SignIn>Sign In</SignIn>\r\n      <Google onClick={googleLogin}>Google</Google>\r\n      <Facebook onClick={facebookLogin}>Facebook</Facebook>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/Loading.abac6ad2.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BarContainer = styled.div`\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 100px;\r\n  transform: translate(-50%, -50%);\r\n  min-width: 10%;\r\n  max-width: 30%;\r\n  padding: 2px;\r\n  height: 10px;\r\n  border-radius: 3px;\r\n  background: gray;\r\n  z-index: 40;\r\n`;\r\nconst Progress = styled.div.attrs((props) => ({\r\n  style: {\r\n    width: props.widthProp + \"%\",\r\n  },\r\n}))`\r\n  height: 100%;\r\n  background: #6ac3ff;\r\n`;\r\n\r\nconst LoadingBar = ({ currentProgress, progressLength }) => {\r\n  return (\r\n    <BarContainer>\r\n      <Progress widthProp={(currentProgress / progressLength) * 100} />\r\n    </BarContainer>\r\n  );\r\n};\r\n\r\nexport default LoadingBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../public/Loading.svg\";\r\nimport LoadingBar from \"./LoadingBar\";\r\nconst CardsContainer = styled.div`\r\n  padding: 4px;\r\n  margin-top: 20px;\r\n  flex-grow: 1;\r\n  display: grid;\r\n\r\n  @media (min-width: 500px) {\r\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\r\n    grid-template-rows: repeat(3, 1fr);\r\n  }\r\n  @media (min-width: 1000px) {\r\n    grid-template-columns: repeat(4, 150px);\r\n    grid-template-rows: repeat(3, minmax(1fr, 250px));\r\n  }\r\n  @media (min-width: 1500px) {\r\n    grid-template-columns: repeat(6, 150px);\r\n    grid-template-rows: repeat(2, minmax(1fr, 250px));\r\n  }\r\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  grid-gap: 4px;\r\n`;\r\nexport const LoadingImg = styled.object.attrs((props) => ({\r\n  data: props.srcProp,\r\n  type: \"image/svg+xml\",\r\n}))`\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 5%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\nconst Start = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 10%;\r\n  border: 1px solid black;\r\n  border-radius: 3px;\r\n  padding: 15px;\r\n  color: #006eff;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  background: #b0ffb0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 20;\r\n  cursor: pointer;\r\n  :active {\r\n    background: #d5ffd5;\r\n  }\r\n`;\r\nconst Cards = (props) => {\r\n  return (\r\n    <>\r\n      {props.loading ? (\r\n        props.imageLoadingProgress !== props.progressLength ? (\r\n          <LoadingBar\r\n            currentProgress={props.imageLoadingProgress}\r\n            progressLength={props.progressLength}\r\n          ></LoadingBar>\r\n        ) : (\r\n          <LoadingImg srcProp={Loading} />\r\n        )\r\n      ) : (\r\n        !props.started && (\r\n          <Start onClick={() => props.start()}>\r\n            {props.shouldContinue ? \"Continue\" : \"Start\"}\r\n          </Start>\r\n        )\r\n      )}\r\n\r\n      <CardsContainer loadingProp={props.loading}>\r\n        {props.children}\r\n      </CardsContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","export const cardImageInitializer = async (\r\n  setCardImageUrls,\r\n  setCardStates,\r\n  storageImagesRef,\r\n  allImagesRef,\r\n  setDataInitialized\r\n) => {\r\n  const imageUrls = [];\r\n\r\n  const images = await storageImagesRef\r\n    .listAll()\r\n    .then((imagesArr) => {\r\n      return imagesArr;\r\n    })\r\n    .catch((err) => {});\r\n  for (const image of images.items) {\r\n    await image\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        imageUrls.push(url);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n  allImagesRef.current = imageUrls;\r\n  setCardImageUrls(randomImagesArrayMaker(imageUrls));\r\n\r\n  setCardStates(cardStatesSetter());\r\n  setDataInitialized(true);\r\n};\r\n\r\nconst randomImagesArrayMaker = (arr) => {\r\n  const newArr = [...arr];\r\n\r\n  const selectedImagesArr = [];\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    selectedImagesArr.push(\r\n      newArr.splice(Math.round(Math.random() * newArr.length - 1), 1)[0]\r\n    );\r\n  }\r\n\r\n  return selectedImagesArr;\r\n};\r\n\r\nconst cardStatesSetter = () => {\r\n  const indexArray = [\r\n    ...Array.from(Array(6).keys()),\r\n    ...Array.from(Array(6).keys()),\r\n  ];\r\n  const cardsArray = [];\r\n  for (let i = 0; i < 12; i++) {\r\n    cardsArray.push({\r\n      urlIndex: indexArray.splice(\r\n        Math.round(Math.random() * indexArray.length - 1),\r\n        1\r\n      )[0],\r\n      flipped: false,\r\n    });\r\n  }\r\n  return cardsArray;\r\n};\r\n\r\nexport const scoreCalculator = (guesses, tries, time, didntGuessStreak) => {\r\n  const score = Math.round(\r\n    10 +\r\n      80 * ((guesses + 1) / (tries + 1)) +\r\n      ((time - 60) / 120) * 80 +\r\n      10 -\r\n      didntGuessStreak * 5\r\n  );\r\n\r\n  return score < 10 ? 10 : score;\r\n};\r\nexport const format = (time) => {\r\n  var mins = ~~((time % 3600) / 60);\r\n  var secs = ~~time % 60;\r\n  var ret = \"\";\r\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\r\n  ret += \"\" + secs;\r\n  return ret;\r\n};\r\n\r\nexport const timeDifference = (previous) => {\r\n  const current = Date.now();\r\n  var msPerMinute = 60 * 1000;\r\n  var msPerHour = msPerMinute * 60;\r\n  var msPerDay = msPerHour * 24;\r\n  var msPerMonth = msPerDay * 30;\r\n  var msPerYear = msPerDay * 365;\r\n\r\n  var elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    return Math.round(elapsed / 1000) + \" seconds ago\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.round(elapsed / msPerDay) + \" days ago\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\r\n  } else {\r\n    return Math.round(elapsed / msPerYear) + \" years ago\";\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Arrow.5b0512cf.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { timeDifference } from \"../functions\";\r\nimport { Score, TimeLeft, Tries } from \"./GameInfo\";\r\nconst HistoryContainer = styled.div`\r\n  height: 50vh;\r\n  display: flex;\r\n  position: absolute;\r\n  background: #a3ddff;\r\n  z-index: 20;\r\n  bottom: 0;\r\n  left: 0;\r\n  margin: 0 !important;\r\n  padding: 2rem 10px 0 10px;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n    height: 5px;\r\n    background: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: gray;\r\n  }\r\n\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: start;\r\n  transition: 1s transform ease;\r\n  transform: ${(props) => {\r\n    return props.showHistory ? \"translateY(100%)\" : \"translateY(0%)\";\r\n  }};\r\n`;\r\nconst HistoryItem = styled.div`\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  > * {\r\n    font-size: 0.8rem !important;\r\n  }\r\n`;\r\n\r\nconst DateDiv = styled.div`\r\n  color: #ffffff;\r\n`;\r\nconst NoGames = styled.div`\r\n  font-size: 1.3rem;\r\n  color: white;\r\n  margin-top: 10px;\r\n`;\r\nconst History = ({ history, showHistory, isMobile }) => {\r\n  return (\r\n    <HistoryContainer showHistory={showHistory}>\r\n      {history.length > 0 ? (\r\n        [...history].reverse().map((item, index) => {\r\n          const { tries, score, timeNeeded, createdAt } = item;\r\n          return (\r\n            <HistoryItem key={index}>\r\n              <Score>\r\n                {!isMobile && \"Score:\"} {score}\r\n              </Score>\r\n              <Tries>\r\n                {!isMobile && \"Tries:\"} {tries}\r\n              </Tries>\r\n\r\n              <TimeLeft>\r\n                {!isMobile && \"Time Needed:\"} {timeNeeded}\r\n              </TimeLeft>\r\n              <DateDiv> {timeDifference(createdAt)} </DateDiv>\r\n            </HistoryItem>\r\n          );\r\n        })\r\n      ) : (\r\n        <NoGames>No Games Yet</NoGames>\r\n      )}\r\n    </HistoryContainer>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { format } from \"../functions\";\r\nimport Arrow from \"../public/Arrow.svg\";\r\nimport History from \"./History\";\r\nimport Loading from \"../public/Loading.svg\";\r\nconst GameInfoContainer = styled.div`\r\n  position: fixed;\r\n  border: 0 !important;\r\n\r\n  top: 0;\r\n  @media (max-width: 768px) {\r\n    right: 0;\r\n    left: initial;\r\n    transform: initial;\r\n  }\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 30;\r\n`;\r\nconst InfoHistoryCont = styled.div`\r\n  position: relative;\r\n`;\r\nconst InfoCont = styled.div`\r\n  background: rgb(137, 198, 255, 0.5);\r\n  font-size: 1.2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 5px;\r\n  > * {\r\n    margin: 0 10px;\r\n  }\r\n`;\r\nconst HistoryCont = styled.div`\r\n  position: absolute;\r\n  bottom: 100%;\r\n  right: 0;\r\n  width: 150%;\r\n  box-sizing: border-box;\r\n  z-index: -1;\r\n`;\r\n\r\nconst GameInfoDivs = styled.div`\r\n  width: max-content;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const Score = styled(GameInfoDivs)`\r\n  color: green;\r\n`;\r\nexport const TimeLeft = styled(GameInfoDivs)`\r\n  color: red;\r\n`;\r\nexport const Tries = styled(GameInfoDivs)`\r\n  color: blue;\r\n`;\r\n\r\nconst Save = styled.div`\r\n  left: 0;\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  height: 100%;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n  background: #5eb1ff;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\nconst ArrowImg = styled.img.attrs((props) => ({\r\n  src: props.srcProp,\r\n}))`\r\n  transition: transform 1s ease;\r\n\r\n  transform: ${(props) =>\r\n    props.showHistory ? \"rotate(-180deg)\" : \"rotate(0deg)\"};\r\n  cursor: pointer;\r\n  margin: 0 10px;\r\n  width: 1rem;\r\n`;\r\n\r\nconst GameFinished = styled(InfoCont)`\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 30%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background: rgb(151, 255, 174);\r\n  z-index: 30;\r\n`;\r\nconst GameInfo = ({\r\n  isMobile,\r\n  history,\r\n  save,\r\n  score,\r\n  timeLeft,\r\n  tries,\r\n  gameFinished,\r\n}) => {\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [finishedScores, setFinishedScores] = useState({\r\n    score: 0,\r\n    tries: 0,\r\n    timeNeeded: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (history.length > 0) {\r\n      setFinishedScores(() => {\r\n        const historyLastItem = history[history.length - 1];\r\n        return historyLastItem;\r\n      });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <>\r\n      {gameFinished && (\r\n        <GameFinished>\r\n          <Score>Score: {finishedScores.score}</Score>\r\n          <Tries>Tries: {finishedScores.tries}</Tries>\r\n\r\n          <TimeLeft>Time Needed: {format(finishedScores.timeNeeded)}</TimeLeft>\r\n        </GameFinished>\r\n      )}\r\n\r\n      <GameInfoContainer isMobile={isMobile}>\r\n        <Save onClick={() => save()}>Save</Save>\r\n        <InfoHistoryCont>\r\n          <InfoCont>\r\n            <Score>\r\n              {!isMobile && \"Score:\"} {score}\r\n            </Score>\r\n            <Tries>\r\n              {!isMobile && \"Tries:\"} {tries}\r\n            </Tries>\r\n\r\n            <TimeLeft>\r\n              {!isMobile && \"Time Left:\"} {format(timeLeft)}\r\n            </TimeLeft>\r\n          </InfoCont>\r\n          <HistoryCont>\r\n            <History\r\n              isMobile={isMobile}\r\n              showHistory={showHistory}\r\n              history={history}\r\n            />\r\n          </HistoryCont>\r\n        </InfoHistoryCont>\r\n        <ArrowImg\r\n          showHistory={showHistory}\r\n          onClick={() => setShowHistory(!showHistory)}\r\n          srcProp={Arrow}\r\n        ></ArrowImg>\r\n      </GameInfoContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameInfo;\r\n","export default __webpack_public_path__ + \"static/media/Menu.de21b81a.svg\";","import React, { useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport Menu from \"../public/Menu.svg\";\r\nimport { Person, SignOut } from \"./Info\";\r\n\r\nconst BurgerNavContainer = styled.div`\r\n  position: fixed;\r\n  transition: height 1s ease, width 1s ease, border-radius 1s ease;\r\n  background: #c4ffff;\r\n  width: ${(props) => {\r\n    return props.menuActivated ? \"400px\" : \"100px\";\r\n  }};\r\n  height: ${(props) => {\r\n    return props.menuActivated ? \"400px\" : \"100px\";\r\n  }};\r\n\r\n  transform: translate(-50%, -50%);\r\n  left: 0;\r\n  top: 0;\r\n  border-radius: ${(props) => (props.menuActivated ? \"0%\" : \"50%\")} !important;\r\n  z-index: 30;\r\n  cursor: pointer;\r\n`;\r\nconst Icon = styled.img.attrs((props) => ({\r\n  src: props.src,\r\n}))`\r\n  position: fixed;\r\n  left: 3px;\r\n  top: 3px;\r\n  width: 1.5rem;\r\n  z-index: 40;\r\n  cursor: pointer;\r\n`;\r\nconst InfoDiv = styled.div`\r\n  opacity: ${(props) => (props.menuActivated ? 1 : 0)};\r\n  transform: ${(props) =>\r\n    props.menuActivated ? \"translate(0%,0%)\" : \"translate(-150%,-200%)\"};\r\n  transition: opacity 1s, transform 1s;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 2rem;\r\n  left: 3rem;\r\n  z-index: 50;\r\n  border: 0px !important;\r\n  gap: 10px;\r\n`;\r\n\r\nconst BurgerNav = ({ currentUser, signOut }) => {\r\n  const [menuActivated, setMenuActivated] = useState(false);\r\n  return (\r\n    <>\r\n      <BurgerNavContainer\r\n        menuActivated={menuActivated}\r\n        onClick={() => setMenuActivated(!menuActivated)}\r\n      ></BurgerNavContainer>\r\n      <Icon onClick={() => setMenuActivated(!menuActivated)} src={Menu}></Icon>\r\n      <InfoDiv menuActivated={menuActivated}>\r\n        <Person>{currentUser}</Person>\r\n        <SignOut onClick={() => signOut()}> Sign out</SignOut>\r\n      </InfoDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerNav;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst WindowInfo = () => {\r\n  const [windowInfo, setWindowInfo] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    isMobile: window.innerWidth <= 768,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const resizeFunc = () => {\r\n      setWindowInfo({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        isMobile: window.innerWidth <= 768,\r\n      });\r\n    };\r\n    window.addEventListener(\"resize\", resizeFunc);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeFunc);\r\n    };\r\n  });\r\n  return { windowInfo };\r\n};\r\nexport default WindowInfo;\r\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Card from \"./components/Card\";\nimport Info from \"./components/Info\";\nimport Login from \"./components/Login\";\nimport Cards from \"./components/Cards\";\nimport GameInfo from \"./components/GameInfo\";\nimport BurgerNav from \"./components/BurgerNav\";\nimport WindowInfo from \"./components/WindowInfo\";\nimport Loading from \"./public/Loading.svg\";\nimport { LoadingImg } from \"./components/Cards\";\nimport LoadingBar from \"./components/LoadingBar\";\nimport { cardImageInitializer, scoreCalculator } from \"./functions\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDNSZ31RYwTbdfVar02zwZAtBzc2OYfGxo\",\n  authDomain: \"card-game-2c6cb.firebaseapp.com\",\n  projectId: \"card-game-2c6cb\",\n  storageBucket: \"card-game-2c6cb.appspot.com\",\n  messagingSenderId: \"1093466034026\",\n  appId: \"1:1093466034026:web:f0e1c493db29e44a759f13\",\n  measurementId: \"G-TKFCP861PS\",\n};\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nconst imagesRef = storageRef.child(\"Images\");\n\nconst GlobalStyle = createGlobalStyle`\n  body{\n    margin:0;\n  }\n`;\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n  height: 100vh;\n  width: 70%;\n  margin: auto;\n`;\nconst GeneralError = styled.div`\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  width: 50vw;\n  height: 50vh;\n  transform: translate(-50%, -50%);\n  border: 1px solid gray;\n  background: #f7f7f7;\n  color: #ff4848;\n  font-size: 1.2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 40;\n`;\n\nfunction App() {\n  const { windowInfo } = WindowInfo();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const [cardImageUrls, setCardImageUrls] = useState(null);\n  const [cardStates, setCardStates] = useState(null);\n  const [tries, setTries] = useState(0);\n  const [guesses, setGuesses] = useState(0);\n  const [score, setScore] = useState(0);\n  const [didntGuessStreak, setDidntGuessStreak] = useState(0);\n  const [currentFlippedCard, setCurrentFlippedCard] = useState(null);\n  const [loginError, setLoginError] = useState(\"\");\n  const [generalError, setGeneralError] = useState(\"\");\n  const [animationInProgress, setAnimationInProgress] = useState(false);\n  const [timeLeftState, setTimeLeftState] = useState(120);\n  const errorRef = useRef();\n  const scoreRef = useRef(0);\n  const guessesRef = useRef(0);\n  const triesRef = useRef(0);\n  const didntGuessStreakRef = useRef(0);\n  const timeLeftRef = useRef(120);\n\n  const timeLeftInterval = useRef();\n  const animationTimeOutRef = useRef();\n  const allImagesRef = useRef();\n  const [started, setStarted] = useState(false);\n  const [shouldContinue, setShouldContinue] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const gameFinishedTimeoutRef = useRef();\n  const [imageLoaded, setImageLoaded] = useState(\n    Array.from({ length: 12 }, () => false)\n  );\n  const [imageLoadingProgress, setImageLoadingProgress] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [loginLoading, setLoginLoading] = useState(true);\n  const [dataInitialized, setDataInitialized] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [saving, setSaving] = useState(false);\n  const googleLogin = async () => {\n    setLoginError(\"\");\n    const provider = new firebase.auth.GoogleAuthProvider();\n    await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n      return firebase\n        .auth()\n        .signInWithPopup(provider)\n        .then((result) => {\n          onLoginFunction(result.user);\n        })\n        .catch((err) => {\n          setLoginError(err.message);\n        });\n    });\n  };\n\n  const facebookLogin = async () => {\n    setLoginError(\"\");\n    const provider = new firebase.auth.FacebookAuthProvider();\n    await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n      return auth\n        .signInWithPopup(provider)\n        .then((result) => {\n          onLoginFunction(result.user);\n        })\n        .catch((err) => {\n          setLoginError(err.message);\n        });\n    });\n  };\n  const onLoginFunction = (user) => {\n    setLoginLoading(false);\n    setCurrentUserId(user.uid);\n    setCurrentUser(user.displayName);\n    setLoggedIn(true);\n    var userRef = firestore.collection(\"users\").doc(user.uid);\n    userRef\n      .get()\n      .then((user) => {\n        let cardsShouldBeInitialized = true;\n        if (user.exists) {\n          const { history, shouldContinue } = user.data();\n          setHistory(history);\n          if (shouldContinue) {\n            cardsShouldBeInitialized = false;\n          }\n        }\n        if (cardsShouldBeInitialized) {\n          cardImageInitializer(\n            setCardImageUrls,\n            setCardStates,\n            imagesRef,\n            allImagesRef,\n            setDataInitialized,\n            timeLeftInterval,\n            timeLeftRef.current\n          );\n        } else {\n          const {\n            score,\n            tries,\n            guesses,\n            timeLeftState,\n            didntGuessStreak,\n            currentFlippedCard,\n            cardImageUrls,\n            cardStates,\n            shouldContinue,\n          } = user.data();\n          setGuesses(guesses);\n          guessesRef.current = guesses;\n          setScore(score);\n          scoreRef.current = score;\n          setTries(tries);\n          triesRef.current = tries;\n          setTimeLeftState(timeLeftState);\n          timeLeftRef.current = timeLeftState;\n          setDidntGuessStreak(didntGuessStreak);\n          didntGuessStreakRef.current = didntGuessStreak;\n          setCurrentFlippedCard(currentFlippedCard);\n          setCardImageUrls(cardImageUrls);\n          setCardStates(cardStates);\n          setShouldContinue(shouldContinue);\n          setDataInitialized(true);\n        }\n      })\n      .catch((err) => {\n        errorFunction(err.message);\n      });\n  };\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        onLoginFunction(user);\n      } else {\n        setLoginLoading(false);\n      }\n    });\n\n    return () => {\n      clearTimeout(gameFinishedTimeoutRef.current);\n      clearTimeout(animationTimeOutRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    let currentProgress = 1;\n    if (dataInitialized) {\n      currentProgress += 1;\n    }\n    imageLoaded.forEach((image) => {\n      if (image) {\n        currentProgress++;\n      }\n    });\n    setImageLoadingProgress(currentProgress);\n    if (!imageLoaded.includes(false) && dataInitialized) {\n      setLoading(false);\n    }\n  }, [dataInitialized, imageLoaded]);\n  const onGameFinish = () => {\n    setGameFinished(true);\n    clearInterval(timeLeftInterval.current);\n    setHistory(() => {\n      const newHistory = [\n        ...history,\n        {\n          tries: triesRef.current,\n          score: scoreRef.current,\n          timeNeeded: 120 - timeLeftRef.current,\n          createdAt: new Date().getTime(),\n        },\n      ];\n      setSaving(true);\n      firestore\n        .collection(\"users\")\n        .doc(currentUserId)\n        .set({ history: newHistory })\n        .then(() => {\n          setSaving(false);\n        })\n        .catch((err) => {\n          errorFunction(err.message);\n          setSaving(false);\n        });\n      return newHistory;\n    });\n    gameFinishedTimeoutRef.current = setTimeout(() => {\n      setGameFinished(false);\n      clearTimeout(gameFinishedTimeoutRef.current);\n\n      setLoading(true);\n      setDataInitialized(false);\n      setImageLoaded(Array.from({ length: 12 }, () => false));\n      cardImageInitializer(\n        setCardImageUrls,\n        setCardStates,\n        imagesRef,\n        allImagesRef,\n        setDataInitialized,\n        timeLeftInterval,\n        timeLeftRef.current\n      );\n\n      guessesRef.current = 0;\n      setGuesses(0);\n      triesRef.current = 0;\n      setTries(0);\n      scoreRef.current = 0;\n      setScore(0);\n      timeLeftRef.current = 120;\n      setTimeLeftState(120);\n      setStarted(false);\n      setShouldContinue(false);\n      setCardStates((prevState) =>\n        prevState.map((card) => ({ ...card, flipped: false }))\n      );\n    }, 3000);\n  };\n  useEffect(() => {\n    if (started) {\n      timeLeftInterval.current = setInterval(() => {\n        if (timeLeftRef.current > 0) {\n          timeLeftRef.current = timeLeftRef.current - 1;\n          setTimeLeftState(timeLeftRef.current);\n        } else {\n          onGameFinish();\n          clearInterval(timeLeftInterval.current);\n        }\n      }, 1000);\n      return () => {\n        clearInterval(timeLeftInterval.current);\n      };\n    }\n  }, [started]);\n\n  const onCardClickFunction = (index) => {\n    if (cardStates[index].flipped || animationInProgress || !started) {\n      return;\n    }\n    setCardStates((prevState) => {\n      return prevState.map((item, arrIndex) => {\n        if (arrIndex === index) {\n          return { ...item, flipped: true };\n        }\n        return item;\n      });\n    });\n    setAnimationInProgress(true);\n    animationTimeOutRef.current = setTimeout(() => {\n      setAnimationInProgress(false);\n\n      if (currentFlippedCard === null) {\n        return setCurrentFlippedCard(index);\n      }\n      if (\n        cardStates[currentFlippedCard].urlIndex === cardStates[index].urlIndex\n      ) {\n        scoreRef.current =\n          scoreRef.current +\n          scoreCalculator(\n            guessesRef.current,\n            triesRef.current,\n            timeLeftRef.current,\n            didntGuessStreakRef.current\n          );\n        setScore(scoreRef.current);\n        triesRef.current += 1;\n        setTries(triesRef.current);\n\n        didntGuessStreakRef.current = 0;\n        setDidntGuessStreak(0);\n        setCurrentFlippedCard(null);\n        guessesRef.current += 1;\n        setGuesses(guessesRef.current);\n        if (guessesRef.current === 6) {\n          onGameFinish();\n        }\n\n        return;\n      }\n      triesRef.current += 1;\n      setTries(triesRef.current);\n      didntGuessStreakRef.current += 1;\n      setDidntGuessStreak(didntGuessStreakRef.current);\n      setCurrentFlippedCard(null);\n      setCardStates((prevState) => {\n        return prevState.map((item, arrIndex) => {\n          if (arrIndex === index || arrIndex === currentFlippedCard) {\n            return { ...item, flipped: false };\n          }\n          return item;\n        });\n      });\n    }, 500);\n  };\n\n  const start = () => {\n    if (dataInitialized) {\n      setStarted(true);\n      setShouldContinue(true);\n    }\n  };\n\n  const signOut = () => {\n    saveData();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setLoggedIn(false);\n        setCurrentUser(\"\");\n      });\n  };\n  const errorFunction = (errorMessage) => {\n    setGeneralError(errorMessage);\n    errorRef.current = setTimeout(() => {\n      setGeneralError(\"\");\n      clearTimeout(errorRef.current);\n    }, 5000);\n  };\n  const saveData = () => {\n    setStarted(false);\n    setSaving(true);\n    firestore\n      .collection(\"users\")\n      .doc(currentUserId)\n      .set({\n        score,\n        tries,\n        guesses,\n        timeLeftState,\n        didntGuessStreak,\n        currentFlippedCard,\n        history,\n        cardImageUrls,\n        cardStates,\n        shouldContinue,\n      })\n      .then(() => {\n        setSaving(false);\n      })\n      .catch((err) => {\n        setSaving(false);\n        errorFunction(err.message);\n      });\n  };\n\n  return (\n    <MainContainer>\n      {generalError.length > 0 && <GeneralError>{generalError}</GeneralError>}\n\n      {!loginLoading ? (\n        loggedIn ? (\n          <>\n            {windowInfo.isMobile ? (\n              <BurgerNav currentUser={currentUser} signOut={signOut} />\n            ) : (\n              <Info currentUser={currentUser} signOut={signOut}></Info>\n            )}\n\n            <GameInfo\n              history={history}\n              save={saveData}\n              score={score}\n              timeLeft={timeLeftState}\n              tries={tries}\n              isMobile={windowInfo.isMobile}\n              loading={loading || saving}\n              gameFinished={gameFinished}\n            ></GameInfo>\n\n            <Cards\n              shouldContinue={shouldContinue}\n              start={start}\n              started={started}\n              loading={loading || saving}\n              progressLength={14}\n              imageLoadingProgress={imageLoadingProgress}\n            >\n              {dataInitialized &&\n                cardStates.map((card, index) => {\n                  const { urlIndex, flipped } = card;\n                  return (\n                    <Card\n                      loading={loading || saving}\n                      setImageLoaded={setImageLoaded}\n                      onCardClickFunction={onCardClickFunction}\n                      key={index}\n                      imageSrc={cardImageUrls[urlIndex]}\n                      flipped={flipped}\n                      index={index}\n                    />\n                  );\n                })}\n            </Cards>\n          </>\n        ) : (\n          <Login\n            error={loginError}\n            facebookLogin={facebookLogin}\n            googleLogin={googleLogin}\n          />\n        )\n      ) : (\n        <LoadingImg srcProp={Loading}></LoadingImg>\n      )}\n      <GlobalStyle />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}